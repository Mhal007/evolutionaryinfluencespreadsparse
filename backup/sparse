
#include <cstdio>
#include <vector>

// Example program
#include <iostream>
#include <string>

using namespace std;

int N = 5;

float influence [5][5];

vector <float> values;
vector <float> col_ind;
vector <float> row_ptr;

int main()
{
    for (int i=0; i<N; i++) {
        for (int j=0; j<N; j++) {
            if (rand() % 1000 * 0.001 < 1) {
                influence[i][j] = rand() % 100 * 0.01;
            } else {
                influence[i][j] = 0;
            }
        }
    }
    
    for (int i=0; i<N; i++) {
        bool added = false;
        for (int j=0; j<N; j++) {
            if (influence[i][j] > 0) {
                
                if (!added) {
                    row_ptr.push_back(values.size());
                    added = true;
                }
                values.push_back(influence[i][j]);
                col_ind.push_back(j);
            }
        }
        
        if (!added) {
            row_ptr.push_back(-1);
        }
    }
    
    
    for (int i=0; i<N; i++) {
        for (int j=0; j<N; j++) {
            float val = influence[i][j];
            if (val == 0) {
                cout << val << ",     ";
            } else if (int(val * 1000) % 100 == 0) {
                cout << val << ",   ";
            } else {
                cout << val << ",  ";
            }
        }
        cout << "\n";
    }
    
    
    cout << "\n";
    
    for (size_t i=0; i<values.size(); i++) {
        cout << values[i] << ", ";
    }
    
    cout << "\n";
    
    for (size_t i=0; i<col_ind.size(); i++) {
        cout << col_ind[i] << ", ";
    }
    
    cout << "\n";
    
    for (size_t i=0; i<row_ptr.size(); i++) {
        cout << row_ptr[i] << ", ";
    }
    
    cout << "\n\n size of influence array: " << sizeof(influence);
    cout << "\n\n Total size of vectors: " << values.size()*sizeof(float) + col_ind.size()*sizeof(float) + row_ptr.size()*sizeof(float);

    int x = 0;
    int y = 4;
    float result = -1;
    
    size_t min = row_ptr[x];
    size_t max = x < N-1 ? row_ptr[x+1] : min + N;

    for (size_t i=min; i<max; i++) {
        cout << "\n i:" << i;
        cout << "\n col_ind [i]:" << col_ind [i];
        cout << "\n values[i]:" << values[i];
        if (col_ind [i] == y) {
            result = values[i];
            break;
        }
    }

    cout << "\n\n Influence is: " <<  result;
    return 0;
}
